a, button {
	all: unset;
	box-sizing: inherit;
	pointer-events: all;
	cursor: pointer;
	transition: all .2s ease;
	display: inline-flex;
	align-items: center;

	& > svg {
		width: 1rem;
		height: 1rem;
		fill: var(--color-primary);
		transition: .3s ease;
		transition-property: transform, fill;

		&:first-child {
			margin-right: 0.5rem;
		}

		&:last-child {
			margin-left: 0.5rem;
		}
	}

	&:hover > svg {
		&:first-child {
			transform: translateX(-0.2rem);
		}

		&:last-child {
			transform: translateX(0.2rem);
		}
	}
}

a span, button span {
	pointer-events: none;
}

// Default link

a, .link {
	color: var(--color-primary);
	position: relative;
	letter-spacing: 1px;
	transition: color .2s ease;

	&:hover {
		color: var(--color-primary--light);
	}

	&:hover > svg {
		fill: var(--color-primary--light);
	}
}

.link-primary {
	background: var(--gradient-primary);
	background-size: cover;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	background-clip: text;
	text-fill-color: transparent;
	text-decoration: none;
	// color: var(--color-default);
	font-size: 1.2rem;
	overflow: hidden;

	&:after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 0;
		width: 200%;
		height: 2px;
		border-radius: 2px;
		background: var(--gradient-primary--loop);
		transition: transform .6s ease;
	}

	&:hover:after {
		transform: translate(-50%);
	}
}

.input-helper {
    font-size: 0.8rem;
    display: block;
    text-align: right;
	color: var(--color-secondary);
	
	&:hover {
		color: var(--color-secondary);
	}
}

// Default button

.btn, button {
	background-color: var(--color-primary);
	color: var(--color-default);
	// text-transform: uppercase;
	font-weight: 300;
	letter-spacing: 1px;
	font-size: 1rem;
	line-height: 1;
	padding: 0.7rem;
	border-radius: var(--border-radius);
}

// Helpers

.btn-round {
	border-radius: calc(var(--border-radius) * 10);
	text-align: center;
	justify-content: center;
}

.btn-large {
	width: 100%;
}

// CTA's

.btn-primary {
	@extend .btn-round;
	@extend .btn-large;

	position: relative;
	overflow: hidden;

	font-weight: 500;
	text-transform: uppercase;
	color: var(--color-primary);
	background-color: transparent;
	box-shadow: var(--shadow-small);
	// border: 2px solid var(--color-default);	

	// readability++ when text (--color-primary) gets on top of --color-primary in the background gradient
	// background: var(--color-primary); // testing readability ...
	text-shadow: var(--color-default) 1px 1px 5px, var(--color-default) -1px -1px 5px;

	&:focus, &:hover {
		box-shadow: var(--shadow-medium);
	}

	&:active {
		box-shadow: var(--shadow-small);
	}

	&:after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		z-index: -1;
		width: 200%;
		height: 100%;
		background: var(--gradient-primary--loop);
		transition: transform .5s, opacity .2s;
	}

	&:hover:after {
		transform: translate(-50%);
		opacity: 0.5;
	}
}